{"version":3,"file":"public-1247131b.js","sources":["../../scripts/utils.js","../../scripts/public/accessibility.js","../../scripts/public/definitions.js","../../scripts/public/dom-loader.js","../../scripts/public/driver-category-query.js","../../scripts/public/landing-banners.js","../../scripts/public/search.js"],"sourcesContent":["/**\n * Utility functions for cleaner JavaScript.\n *\n * Unit tests for functional data manipulations and logical operations found in `Tests`.\n */\n\n/**\n * addGlobalEventListenerPlugin is a utility function that attaches an event listener to the given parent element and triggers the callback function only if the event target matches the given selector.\n *\n * @param {string}         type              - The type of event to listen for (e.g. 'click', 'pointerevent')\n * @param {string|Element} selector          - The selector to match against the event. Can be a CSS selector string or an Element.\n * @param {Function}       callback          - The function to be called when the event is triggered\n * @param {Element}        [parent=document] - The parent element to attach the event listener to (defaults to document)\n */\n\n/**\n *\n * @param type\n * @param selector\n * @param callback\n * @param parent\n */\nexport function addGlobalEventListenerPlugin(\n    type,\n    selector,\n    callback,\n    parent = document\n) {\n    // check if the selector is valid\n    if (!selector || typeof selector !== 'string') {\n        throw new Error('Invalid selector: must be CSS selector or an element');\n    }\n\n    // check if the callback is a valid function\n    if (typeof callback !== 'function') {\n        throw new Error('Invalid callback provided');\n    }\n\n    parent.addEventListener(type, (event) => {\n        // use qsa to get all elements that match the selector\n        const elements = document.querySelectorAll(selector);\n\n        // check if the event target is one of the matching elements\n        const target = event.target;\n        if (\n            elements.includes(target) ||\n            elements.some((element) => element.contains(target))\n        ) {\n            callback(event);\n        }\n    });\n}\n\n/**\n * createElement - creates an HTML element with the given type and options\n *\n * @param {string} type            - the type of element to create (e.g. 'div', 'p', 'h1')\n * @param {Object} [options={}]    - an object containing key-value pairs of attributes and values to set on the element\n * @param {string} options.class   - the class(es) to add to the element – a single space-separated string\n * @param {Object} options.dataset - an object containing key-value pairs of data attributes and values to set on the element\n * @param {string} options.text    - the text content to set on the element\n * @return {HTMLElement} the created element\n */\nexport function createElement(type, options = {}) {\n    const element = document.createElement(type);\n    Object.entries(options).forEach(([key, value]) => {\n        if ('class' === key) {\n            value.split(' ').forEach((className) => {\n                if ('' !== className) {\n                    element.classList.add(className);\n                }\n            });\n            return;\n        }\n\n        if ('dataset' === key) {\n            Object.entries(value).forEach(([dataKey, dataValue]) => {\n                element.dataset[dataKey] = dataValue;\n            });\n            return;\n        }\n\n        if ('text' === key) {\n            element.textContent = value;\n            return;\n        }\n\n        if ('html' === key) {\n            element.innerHTML = value;\n            return;\n        }\n\n        element.setAttribute(key, value);\n    });\n    return element;\n}\n\n/**\n * qs is a utility function that returns the first element matching the given CSS selector within the given parent element.\n *\n * @param {string}  selector          - The CSS selector to search for\n * @param {Element} [parent=document] - The parent element to search within (defaults to document)\n * @return {Element} - The first element matching the selector, or null if no match is found\n * @throws {Error} If `selector` argument is missing\n */\nexport function qs(selector, parent = document) {\n    if (!selector) {\n        throw new Error('A selector argument is required for the qs function');\n    }\n    return parent.querySelector(selector);\n}\n\n/**\n * qsa is a utility function that returns an array of all elements matching the given CSS selector within the given parent element.\n *\n * @param {string}  selector          - The CSS selector to search for\n * @param {Element} [parent=document] - The parent element to search within (defaults to document)\n * @return {Element[]} - An array of all elements matching the selector, or an empty array if no matches are found\n * @throws {Error} If `selector` argument is missing\n */\nexport function qsa(selector, parent = document) {\n    if (!selector) {\n        throw new Error('A selector argument is required for the qsa function');\n    }\n    return [...parent.querySelectorAll(selector)];\n}\n\n/**\n * unEscapeCSS - replaces escape characters in a CSS string with their unescaped equivalents\n *\n * @param {string} cssStr – the CSS string to unescape containing CSS selectors and attributes\n * @return {string} - An escaped CSS string\n */\nexport function unEscapeCSS(cssStr) {\n    cssStr = cssStr.replace(/&gt;/g, '>');\n    cssStr = cssStr.replace(/&quot;/g, '\"');\n    cssStr = cssStr.replace(/&#39;/g, \"'\");\n    cssStr = cssStr.replace(/&amp;/g, '&');\n    return cssStr;\n}\n\n/**\n * Finds the closest ancestor element with the specified class name from the given element.\n *\n * @param {HTMLElement} element   - The element to start searching from.\n * @param {string}      className - The class name to search for.\n * @return {HTMLElement|null} - The closest ancestor element with the specified class name, or null if not found.\n */\nexport function findParentElementByClass(element, className) {\n    let current = element.parentNode;\n    while (\n        current !== null &&\n        current.nodeType === window.Node.ELEMENT_NODE &&\n        !current.classList.contains(className)\n    ) {\n        current = current.parentNode;\n    }\n    return current;\n}\n\n/**\n * Creates a breadcrumb container element based on an array of breadcrumb paths. Leverages the AIOSEO format provided by that plugin.\n *\n * @module createBreadcrumbs\n * @param {Array} paths - An array of objects representing the breadcrumb paths, with each object containing the name and URL of a breadcrumb path.\n * @return {HTMLElement} The breadcrumb container element containing all of the breadcrumbs.\n */\nexport function createBreadcrumbs(paths) {\n    const breadcrumbsContainer = document.createElement('div');\n    breadcrumbsContainer.classList.add('aioseo-breadcrumbs');\n\n    const homeBreadcrumb = createBreadcrumb('Home', '/');\n    breadcrumbsContainer.appendChild(homeBreadcrumb);\n\n    const separator = createBreadcrumbSeparator();\n\n    for (let i = 0; i < paths.length; i++) {\n        const path = paths[i];\n        const breadcrumb = createBreadcrumb(\n            path.name,\n            path.url,\n            i === paths.length - 1\n        );\n        breadcrumbsContainer.appendChild(separator.cloneNode(true));\n        breadcrumbsContainer.appendChild(breadcrumb);\n    }\n\n    return breadcrumbsContainer;\n}\n\n/**\n * Creates a breadcrumb navigation element.\n *\n * @param {string}  text   - The text for the breadcrumb.\n * @param {string}  href   - The href for the breadcrumb link. If not provided, the breadcrumb will be a span element with the provided text.\n * @param {boolean} isLast - A flag indicating whether this breadcrumb is the last one. If not, a separator will be added after the breadcrumb.\n * @return {HTMLElement} - The breadcrumb navigation element, represented as an HTML span element with class 'aioseo-breadcrumb'.\n */\nfunction createBreadcrumb(text, href, isLast) {\n    const breadcrumb = document.createElement('span');\n    breadcrumb.classList.add('aioseo-breadcrumb');\n\n    if (href) {\n        const link = document.createElement('a');\n        link.href = href;\n        link.title = text;\n        link.dataset.text = text;\n        link.textContent = text;\n        breadcrumb.appendChild(link);\n    } else {\n        breadcrumb.textContent = text;\n    }\n\n    if (!isLast) {\n        const separator = createBreadcrumbSeparator();\n        if (breadcrumb.parentNode) {\n            breadcrumb.parentNode.insertBefore(\n                separator,\n                breadcrumb.nextSibling\n            );\n        }\n    }\n\n    return breadcrumb;\n}\n\n/**\n * Creates a breadcrumb separator element and returns it.\n *\n * @function\n * @return {HTMLElement} The breadcrumb separator element.\n */\nfunction createBreadcrumbSeparator() {\n    const separator = document.createElement('span');\n    separator.classList.add('aioseo-breadcrumb-separator');\n    separator.textContent = '›';\n    return separator;\n}\n\n/**\n * Safely adds an event listener to a target element.\n *\n * @param {EventTarget | object} el        - The target element to which the event listener will be added.\n * @param {string}               event     - A string representing the event type to listen for (e.g., 'click', 'resize').\n * @param {Function | object}    handler   - The event listener function or object.\n * @param {boolean | object}     [options] - An optional object specifying options for the event listener.\n * @throws {Error} Throws an error if the target is not a valid element or if it doesn't support addEventListener.\n */\nexport function addSafeEventListenerPlugin(el, event, handler, options) {\n    if (el && 'function' === typeof el.addEventListener) {\n        // Call the original function\n        el.addEventListener(event, handler, options);\n    } else {\n        /* eslint-disable no-console */\n        console.warn(\n            'el is not a valid EventTarget or does not support addEventListener'\n        );\n        /* eslint-enable no-console */\n    }\n}\n","import { qs, qsa, addSafeEventListenerPlugin } from '../utils';\n\n/**\n * Accessibility DOM manipulation.\n */\nconst bcgovBlockThemePluginAccessibility = () => {\n\t/*\n\t * SafarIE iOS requires window.requestAnimationFrame update.\n\t */\n\twindow.requestAnimationFrame( () => {\n\n\t\tconst actionsAccordionHeader = document.querySelector( '.actions-accordion-header' );\n\t\tif ( null !== actionsAccordionHeader ) {\n\t\t\tconst getSiblings = function ( elem ) {\n\t\t\t\t// Setup siblings array and get the first sibling\n\t\t\t\tconst siblings = [];\n\t\t\t\tlet sibling = elem.parentNode.firstChild;\n\n\t\t\t\t// Loop through each sibling and push to the array\n\t\t\t\twhile ( sibling ) {\n\t\t\t\t\tif ( 1 === sibling.nodeType && sibling !== elem ) {\n\t\t\t\t\t\tsiblings.push( sibling );\n\t\t\t\t\t}\n\t\t\t\t\tif ( null !==  sibling.nextSibling ) {\n\t\t\t\t\t\tsibling = sibling.nextSibling;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn siblings;\n\t\t\t};\n\t\t\t/*\n\t\t\t * Inject ARIA labels into queried content.\n\t\t\t */\n\t\t\tconst labelEls = qsa( '.labelInjector' );\n\t\t\tlabelEls.forEach( ( label ) => {\n\t\t\t\tconst siblings = getSiblings( label );\n\t\t\t\tconst ariaLabel = label.getAttribute( 'data-label' );\n\t\t\t\tsiblings.forEach( ( el ) => {\n\t\t\t\t\tif ( el.classList.contains( 'wp-block-buttons' ) ) {\n\t\t\t\t\t\tconst link = qs( '.wp-block-button__link', el );\n\t\t\t\t\t\tlink.setAttribute( 'aria-label', ariaLabel );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\tlabel.remove();\n\t\t\t} );\n\t\t}\n\t} );\n};\n\nif ( 'complete' === document.readyState ) {\n\tbcgovBlockThemePluginAccessibility();\n} else {\n\taddSafeEventListenerPlugin(\n\t\tdocument,\n\t\t'DOMContentLoaded',\n\t\tbcgovBlockThemePluginAccessibility()\n\t);\n}\n","import { addSafeEventListenerPlugin } from '../utils';\n\n/**\n * General CleanBC Definitons dialog generator.\n */\nconst bcgovBlockThemePluginDefnitions = () => {\n    /*\n     * SafarIE iOS requires window.requestAnimationFrame update.\n     */\n    window.requestAnimationFrame(() => {\n        const links = document.querySelectorAll('a:not(#postFilterApp a)');\n\n        const definitionLinks = Array.from(links).filter(function (link) {\n            return link.href.includes('definitions');\n        });\n\n        if (definitionLinks.length > 0) {\n            const dialog = document.createElement('dialog');\n            dialog.id = 'dialog';\n            dialog.className = 'dialog';\n            dialog.setAttribute('aria-modal', true);\n            dialog.setAttribute('aria-live', 'polite');\n            dialog.innerHTML =\n                '<div class=\"dialog-content\"></div><button id=\"close-dialog\" aria-label=\"closes defintion dialog\">Close</button>';\n            document.body.appendChild(dialog);\n\n            const closeDialogButton = document.getElementById('close-dialog');\n\n            closeDialogButton.addEventListener('click', function () {\n                dialog.close();\n            });\n\n            definitionLinks.forEach(function (link) {\n                link.classList.add('icon-definition');\n                link.setAttribute(\n                    'aria-label',\n                    'opens definition dialog for: ' + link.text\n                );\n\n                // Adding event listeners for both click and keypress events\n                addEventListeners(link);\n            });\n\n        }\n        /**\n         *\n         * @param element\n         */\n        function addEventListeners(element) {\n            element.addEventListener('click', handleClick);\n            element.addEventListener('keypress', handleKeypress);\n        }\n\n        /**\n         *\n         * @param event\n         */\n        async function handleClick(event) {\n            if (\n                'click' === event.type ||\n                ('keypress' === event.type && 'Enter' === event.key)\n            ) {\n                event.preventDefault();\n                const url = event.currentTarget.getAttribute('href');\n                console.log('url', url);\n                const cachedData = window.sessionStorage.getItem(url);\n                console.log('cachedData', cachedData);\n                if (cachedData) {\n                    const { title, content } = JSON.parse(cachedData);\n                    displayContent(title, content);\n                } else {\n                    try {\n                        const response = await fetch(url);\n        \n                        if (!response.ok) {\n                            throw new Error(`HTTP error! Status: ${response.status}`);\n                        }\n        \n                        const html = await response.text();\n                        const parser = new window.DOMParser();\n                        const doc = parser.parseFromString(html, 'text/html');\n        \n                        const titleElement = doc.querySelector('.wp-block-post-title');\n                        const contentElement = doc.querySelector('.entry-content');\n        \n                        if (!titleElement || !contentElement) {\n                            throw new Error(\n                                'Required content not found in the fetched HTML.'\n                            );\n                        }\n        \n                        const title = titleElement.innerText;\n                        const content = contentElement.innerHTML;\n                        const dataToCache = { title, content };\n        \n                        window.sessionStorage.setItem(url, JSON.stringify(dataToCache));\n                        displayContent(title, content);\n                    } catch (error) {\n                        console.error('Error fetching content:', error);\n                    }\n                }\n            }\n        }\n        \n\n        /**\n         *\n         * @param event\n         */\n        function handleKeypress(event) {\n            if ('Enter' === event.key || 13 === event.keycode) {\n                handleClick(event);\n            }\n        }\n\n        /**\n         *\n         * @param title\n         * @param content\n         */\n        function displayContent(title, content) {\n            const dialogContent = document.querySelector(\n                '#dialog .dialog-content'\n            );\n            dialogContent.innerHTML =\n                '<h2 tabindex=\"0\">' + title + '</h2>' + content;\n            showDialog();\n            dialogContent.querySelector('h2').focus();\n        }\n\n        /**\n         *\n         */\n        function showDialog() {\n            const dialog = document.getElementById('dialog');\n            dialog.showModal();\n        }\n    });\n};\n\nif ('complete' === document.readyState) {\n    bcgovBlockThemePluginDefnitions();\n} else {\n    addSafeEventListenerPlugin(\n        document,\n        'DOMContentLoaded',\n        bcgovBlockThemePluginDefnitions()\n    );\n}\n","import { addSafeEventListenerPlugin } from '../utils';\n\n/**\n * General CleanBC DOM manipulation.\n */\nconst bcgovBlockThemePluginDomLoader = () => {\n\t/*\n\t * SafarIE iOS requires window.requestAnimationFrame update.\n\t */\n\twindow.requestAnimationFrame( () => {\n\t\tconst body = document.querySelector( 'body' );\n\t\tbody.classList.add( 'cleanbc-plugin' );\n\t\t// CleanBC Icon Buttons\n\t\tconst iconButtons = document.querySelectorAll( 'a.icon' );\n\t\tif ( iconButtons.length ) {\n\t\t\ticonButtons.forEach( ( button ) => {\n\t\t\t\tif ( null === button.getAttribute( 'href' ) ) {\n\t\t\t\t\tbutton.setAttribute( 'tabindex', '-1' );\n\t\t\t\t\tbutton.style.pointerEvents = 'none';\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// This should be CSS...\n\t\tconst iconButtonContainers = document.querySelectorAll(\n\t\t\t'.wp-block-button.is-style-icon'\n\t\t);\n\t\tif ( iconButtonContainers.length ) {\n\t\t\ticonButtonContainers.forEach( ( container ) => {\n\t\t\t\tconst containerLink = container.querySelector( 'a' );\n\t\t\t\tif (\n\t\t\t\t\tnull !== containerLink &&\n\t\t\t\t\t! container.classList.contains( 'has-size-large' )\n\t\t\t\t) {\n\t\t\t\t\tcontainerLink.style.outlineOffset = '1rem';\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t} );\n};\n\nif ( 'complete' === document.readyState ) {\n\tbcgovBlockThemePluginDomLoader();\n} else {\n\taddSafeEventListenerPlugin(\n\t\tdocument,\n\t\t'DOMContentLoaded',\n\t\tbcgovBlockThemePluginDomLoader()\n\t);\n}\n","import { addSafeEventListenerPlugin } from '../utils';\n/**\n * General CleanBC Drivers page Query Loop manipulation.\n */\nconst bcgovBlockThemePluginDriverCategoryQuery = () => {\n    /*\n     * SafarIE iOS requires window.requestAnimationFrame update.\n     */\n    window.requestAnimationFrame(() => {\n        const queryLoopDriverCardContainer = document.querySelectorAll(\n            '.wp-block-query.vue-card-container'\n        );\n\n        if (queryLoopDriverCardContainer.length) {\n            fetchDataAndReplaceLinks();\n        }\n\n        /**\n         * Fetches data from a specified API endpoint, processes categories, replaces links with images,\n         * and caches the data to optimize subsequent calls. Cache expires afetr 1 day.\n         *\n         * @async\n         * @function fetchDataAndReplaceLinks\n         * @param {number} [page=1] - The offset for paginating through API results.\n         * @throws {Error} Throws an error if there's an HTTP error during the API fetch.\n         * @throws {Error} Throws an error if there's an issue parsing the cached data.\n         * @throws {Error} Throws an error if there's an issue during data fetching and processing.\n         * @return {Promise<void>} A Promise that resolves after fetching, processing, and replacing links.\n         */\n        async function fetchDataAndReplaceLinks(page = 1) {\n            try {\n                const perPage = 100;\n                const cachedData = window.localStorage.getItem('apiData');\n                const cachedTimestamp =\n                    window.localStorage.getItem('apiDataTimestamp');\n\n                // Initialize existingData as an array, even if there is no cached data\n                const existingData = cachedData ? JSON.parse(cachedData) : [];\n\n                if (cachedData && cachedTimestamp) {\n                    try {\n                        const currentTime = new Date().getTime();\n                        const timeDiff =\n                            currentTime - parseInt(cachedTimestamp, 10);\n                        const oneDayInMillis = 24 * 60 * 60 * 1000; // 1 day in milliseconds\n\n                        if (timeDiff < oneDayInMillis) {\n                            // Use cached data if it's less than a day old\n                            processCategories(existingData);\n                            return;\n                        }\n                    } catch (cacheError) {\n                        /* eslint-disable no-console */\n                        console.error(\n                            'Error parsing cached data:',\n                            cacheError.message\n                        );\n                        /* eslint-enable no-console */\n                    }\n                }\n\n                const response = await fetch(\n                    `${window.site?.domain}/wp-json/wp/v2/project?_embed&per_page=${perPage}&page=${page}&_category_image=true`\n                );\n\n                if (!response.ok) {\n                    throw new Error(`HTTP error! Status: ${response.status}`);\n                }\n\n                const newData = await response.json();\n                const mergedData = existingData.concat(newData);\n\n                // Store merged data in cache\n                window.localStorage.setItem(\n                    'apiData',\n                    JSON.stringify(mergedData)\n                );\n\n                // If there are more projects, recursively fetch the next page\n                if (newData.length >= perPage) {\n                    await fetchDataAndReplaceLinks(page + 1);\n                }\n\n                processCategories(mergedData);\n\n                // Store timestamp and enable cache override\n                window.localStorage.setItem(\n                    'apiDataTimestamp',\n                    new Date().getTime().toString()\n                );\n            } catch (error) {\n                /* eslint-disable no-console */\n                console.error('Error fetching data:', error.message);\n                /* eslint-enable no-console */\n            }\n        }\n\n        /**\n         * Processes category data extracted from the provided API response, filters out duplicates,\n         * and prepares an array of unique categories with associated images for further use.\n         *\n         * @function processCategories\n         * @param {Object[]} data - An array of project items from the API response.\n         * @return {void} The function does not return a value, but it logs the unique categories and calls replaceLinks with the processed data.\n         */\n        function processCategories(data) {\n            const categories = [];\n            const uniqueCategoryNames = new Set();\n\n            data.forEach((item) => {\n                const terms = item?._embedded?.['wp:term'] || [];\n\n                terms.forEach((categoryArray) => {\n                    categoryArray.forEach((category) => {\n                        const categoryName = category?.name;\n                        const categoryImage = category?.acf?.category_image;\n\n                        if (\n                            categoryName &&\n                            categoryName !== 'Actions we are taking' &&\n                            !uniqueCategoryNames.has(categoryName)\n                        ) {\n                            uniqueCategoryNames.add(categoryName); // Add the name to the set\n                            categories.push({\n                                name: categoryName,\n                                acf: {\n                                    category_image: categoryImage || null,\n                                },\n                            });\n                        }\n                    });\n                });\n            });\n\n            replaceLinks(categories);\n        }\n\n        /**\n         * Replaces links within elements of class 'taxonomy-category' with images based on the provided categories.\n         * Called from processCategories function.\n         *\n         * @function replaceLinks\n         * @param {Object[]} categories                        - An array of category objects containing name and acf properties.\n         * @param {string}   categories[].name                 - The name of the category.\n         * @param {Object}   [categories[].acf]                - Additional fields associated with the category (e.g., category_image).\n         * @param {string}   [categories[].acf.category_image] - The URL of the category image.\n         * @return {void} The function does not return a value, but it modifies the DOM by replacing links with images.\n         */\n        function replaceLinks(categories) {\n            document\n                .querySelectorAll('div.taxonomy-category')\n                .forEach((categoryDiv) => {\n                    const links = categoryDiv.querySelectorAll('a');\n                    const separators = categoryDiv.querySelectorAll(\n                        'span.wp-block-post-terms__separator'\n                    );\n\n                    separators.forEach((separator) => separator.remove());\n\n                    links.forEach((link) => {\n                        const categoryName = link.innerText.trim();\n\n                        if ('Actions we are taking' === categoryName) {\n                            link.remove();\n                            return;\n                        }\n\n                        // Find the category with the matching name\n                        const matchingCategory = categories.find(\n                            (category) => category.name === categoryName\n                        );\n\n                        // Replace the link with an image if the category is found\n                        if (matchingCategory) {\n                            const categoryImage =\n                                matchingCategory?.acf?.category_image;\n                            if (categoryImage) {\n                                // Create an image element\n                                const imgElement =\n                                    document.createElement('img');\n                                imgElement.src = categoryImage;\n                                imgElement.alt = categoryName;\n                                imgElement.title = categoryName;\n\n                                // Replace the link with the image\n                                link.replaceWith(imgElement);\n                            }\n                        }\n                    });\n\n                    categoryDiv.style.opacity = '1';\n                });\n        }\n    });\n};\n\nif ('complete' === document.readyState) {\n    bcgovBlockThemePluginDriverCategoryQuery();\n} else {\n    addSafeEventListenerPlugin(\n        document,\n        'DOMContentLoaded',\n        bcgovBlockThemePluginDriverCategoryQuery()\n    );\n}\n","import { qsa, addSafeEventListenerPlugin } from '../utils';\n\n/**\n * Landing banners manipulation.\n */\nconst bcgovBlockThemePluginLandingBanners = () => {\n\t/*\n\t * SafarIE iOS requires window.requestAnimationFrame update.\n\t */\n\twindow.requestAnimationFrame( () => {\n\t\t/*\n\t\t * Add a clip path SVG to create a mask on landing banner ::before elements.\n\t\t * Works in conjuction with .landing-cover-banner styles in _cleanbc--patterns-banners.scss.\n\t\t */\n\t\tconst isHomeBanner = qsa( '.home-cover-banner' );\n\t\tconst isLandingBanner = qsa( '.landing-cover-banner' );\n\n\t\tif ( isHomeBanner.length || isLandingBanner.length ) {\n\t\t\tconst svgNamespace = 'http://www.w3.org/2000/svg';\n\t\t\tconst svg = document.createElementNS( svgNamespace, 'svg' );\n\t\t\tconst clipElementDefs = document.createElementNS(\n\t\t\t\tsvgNamespace,\n\t\t\t\t'defs'\n\t\t\t);\n\t\t\tconst clipElementClipPath = document.createElementNS(\n\t\t\t\tsvgNamespace,\n\t\t\t\t'clipPath'\n\t\t\t);\n\t\t\tclipElementClipPath.setAttribute( 'id', 'svgPath' );\n\t\t\tconst clipElementPath = document.createElementNS(\n\t\t\t\tsvgNamespace,\n\t\t\t\t'path'\n\t\t\t);\n\t\t\tclipElementPath.setAttribute(\n\t\t\t\t'd',\n\t\t\t\t'M0,77.2v-24.7c0,-8.6,6.8,-15.6,15.3,-16l901.5,-36.6c44.3,-1.7,81.5,33.1,83.2,77.5l-1000,-0.2z'\n\t\t\t);\n\t\t\tclipElementClipPath.setAttribute( 'transform', 'scale(1.44)' );\n\n\t\t\t// Build the SVG structure\n\t\t\tsvg.appendChild( clipElementDefs );\n\t\t\tclipElementDefs.appendChild( clipElementClipPath );\n\t\t\tclipElementClipPath.appendChild( clipElementPath );\n\n\t\t\t// Set attributes and styles\n\t\t\tsvg.setAttribute( 'xmlns', svgNamespace );\n\t\t\tsvg.setAttribute( 'xmlns:xlink', 'http://www.w3.org/1999/xlink' );\n\t\t\tsvg.setAttribute( 'version', '1.1' );\n\t\t\tsvg.setAttribute( 'width', '100' );\n\t\t\tsvg.setAttribute( 'height', '100' );\n\t\t\tsvg.setAttribute( 'viewBox', '0 0 100 100' );\n\t\t\tsvg.setAttribute( 'preserveAspectRatio', 'none' );\n\t\t\tsvg.style.position = 'absolute';\n\t\t\tsvg.style.top = '0';\n\t\t\tsvg.style.left = '0';\n\t\t\tsvg.style.visibility = 'visible';\n\n\t\t\t// Insert the SVG after the body tag\n\t\t\tconst body = document.getElementsByTagName( 'body' )[ 0 ];\n\t\t\tbody.insertAdjacentElement( 'afterbegin', svg );\n\t\t}\n\t} );\n};\n\nif ( 'complete' === document.readyState ) {\n\tbcgovBlockThemePluginLandingBanners();\n} else {\n\taddSafeEventListenerPlugin(\n\t\tdocument,\n\t\t'DOMContentLoaded',\n\t\tbcgovBlockThemePluginLandingBanners()\n\t);\n}\n","import { addSafeEventListenerPlugin } from '../utils';\n/**\n * General CleanBC DOM manipulation.\n */\nconst bcgovBlockThemePluginSearch = () => {\n    /*\n     * SafarIE iOS requires window.requestAnimationFrame update.\n     */\n    window.requestAnimationFrame(() => {\n    //     const toggleSearchBtn = qs('.toggle-search-btn a');\n    //     const searchFieldContainer = qs('#search-field-container');\n\n    //     if (toggleSearchBtn) {\n    //         if (searchFieldContainer) {\n    //             const siblingElement =\n    //                 searchFieldContainer.previousElementSibling;\n\n    //             const searchInput = qs('input', searchFieldContainer);\n    //             const searchButton = qs('button', searchFieldContainer);\n\n    //             if (searchFieldContainer && siblingElement) {\n    //                 siblingElement.parentNode.insertBefore(\n    //                     searchFieldContainer,\n    //                     siblingElement\n    //                 );\n    //             }\n    //             toggleSearchBtn.addEventListener('click', function (event) {\n    //                 event.preventDefault();\n\n    //                 if (searchFieldContainer) {\n    //                     if (searchFieldContainer.classList.contains('hidden')) {\n    //                         searchFieldContainer.classList.remove('hidden');\n    //                         if (searchInput) {\n    //                             searchInput.focus();\n    //                         }\n    //                     } else {\n    //                         searchFieldContainer.classList.add('hidden');\n    //                     }\n    //                 }\n    //             });\n\n    //             toggleSearchBtn.addEventListener('keydown', (event) => {\n    //                 if ('Space' === event.code || 'Enter' === event.code) {\n    //                     event.preventDefault();\n    //                     toggleSearchBtn.click();\n    //                 }\n    //             });\n\n    //             if (searchFieldContainer) {\n    //                 searchInput.addEventListener('blur', function (event) {\n    //                     event.preventDefault();\n    //                     window.requestAnimationFrame(() => {\n    //                         if (\n    //                             searchButton ===\n    //                             event.target.ownerDocument.activeElement\n    //                         ) {\n    //                             return;\n    //                         }\n    //                         if (\n    //                             toggleSearchBtn ===\n    //                             event.target.ownerDocument.activeElement\n    //                         ) {\n    //                             return;\n    //                         }\n    //                         toggleSearchBtn.focus();\n    //                         toggleSearchBtn.click();\n    //                     });\n    //                 });\n\n    //                 searchButton.addEventListener('blur', function (event) {\n    //                     event.preventDefault();\n    //                     window.requestAnimationFrame(() => {\n    //                         if (\n    //                             searchInput ===\n    //                             event.target.ownerDocument.activeElement\n    //                         ) {\n    //                             return;\n    //                         }\n    //                         if (\n    //                             toggleSearchBtn ===\n    //                             event.target.ownerDocument.activeElement\n    //                         ) {\n    //                             return;\n    //                         }\n    //                         toggleSearchBtn.focus();\n    //                         toggleSearchBtn.click();\n    //                     });\n    //                 });\n    //             }\n    //         }\n    //     }\n\n    const searchInput = document.querySelector('.wp-block-search__input');\n    const resultDetails = document.querySelector('.result-details');\n\n    const extractWordsAndPhrases = (input) => {\n        // Match quoted phrases or standalone words\n        const regex = /\"([^\"]+)\"|\\b(\\w+)\\b/g;\n        const matches = [];\n        let match;\n        while ((match = regex.exec(input)) !== null) {\n            matches.push(match[1] || match[2]); // Add quoted phrases or single words\n        }\n        return matches;\n    }\n\n    const highlightMatches = () => {\n\n        const inputValue = searchInput.value.trim();\n        const searchTerms = extractWordsAndPhrases(inputValue);\n        const filteredTerms = searchTerms.filter(term => term.length >= 3);\n\n        let content = resultDetails.innerHTML;\n\n        const escapedTerms = filteredTerms.map(term => term.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'));\n        const regex = new RegExp(`(${escapedTerms.join('|')})`, 'gi');\n\n        content = content.replace(regex, '<mark>$1</mark>');\n        content = content.replace(/<\\/mark>\\s*<mark>/g, ' '); // Remove unnecessary closing and opening tags.\n        resultDetails.innerHTML = content;\n    }\n\n    if ( null !== searchInput && null !== resultDetails ) {\n       highlightMatches();\n    }\n});\n}\n\nif ('complete' === document.readyState) {\n    bcgovBlockThemePluginSearch();\n} else {\n    addSafeEventListenerPlugin(\n        document,\n        'DOMContentLoaded',\n        bcgovBlockThemePluginSearch()\n    );\n}\n"],"names":["qsa","selector","parent","document","Error","querySelectorAll","addSafeEventListenerPlugin","el","event","handler","options","addEventListener","console","warn","bcgovBlockThemePluginAccessibility","window","requestAnimationFrame","querySelector","getSiblings","elem","siblings","sibling","parentNode","firstChild","nodeType","push","nextSibling","forEach","label","ariaLabel","getAttribute","classList","contains","qs","setAttribute","remove","readyState","bcgovBlockThemePluginDefnitions","links","definitionLinks","Array","from","filter","link","href","includes","length","dialog","createElement","id","className","innerHTML","body","appendChild","getElementById","close","add","text","addEventListeners","element","handleClick","handleKeypress","async","type","key","preventDefault","url","currentTarget","log","cachedData","sessionStorage","getItem","title","content","JSON","parse","displayContent","response","fetch","ok","status","html","doc","DOMParser","parseFromString","titleElement","contentElement","innerText","dataToCache","setItem","stringify","error","keycode","dialogContent","showDialog","showModal","focus","bcgovBlockThemePluginDomLoader","iconButtons","button","style","pointerEvents","iconButtonContainers","container","containerLink","outlineOffset","bcgovBlockThemePluginDriverCategoryQuery","processCategories","data","categories","uniqueCategoryNames","Set","item","_a","_embedded","categoryArray","category","categoryName","name","categoryImage","acf","category_image","has","replaceLinks","categoryDiv","separator","trim","matchingCategory","find","imgElement","src","alt","replaceWith","opacity","fetchDataAndReplaceLinks","page","perPage","localStorage","cachedTimestamp","existingData","timeDiff","Date","getTime","parseInt","cacheError","message","site","domain","newData","json","mergedData","concat","toString","bcgovBlockThemePluginLandingBanners","isHomeBanner","isLandingBanner","svgNamespace","svg","createElementNS","clipElementDefs","clipElementClipPath","clipElementPath","position","top","left","visibility","getElementsByTagName","insertAdjacentElement","bcgovBlockThemePluginSearch","searchInput","resultDetails","filteredTerms","input","regex","matches","match","exec","extractWordsAndPhrases","value","term","escapedTerms","map","replace","RegExp","join"],"mappings":"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"}